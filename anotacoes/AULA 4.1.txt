AULA 4.1

- relacionamentos
- muitos para um 
	- @ManyToOne
	- Cliente x Pedido
- um para muitos (coleções)
	- @OneToMany
	- Cliente x Pedido 
	- mappedBy=cliente - pegar pelo atributo cliente. estrutura do banco de dados pega no atributo cliente da classe pedido
	- @JoinColumn(name="cliente_id") - faz a relação
- um para um
	- não pode fazer referencia repetiviva, mais de uma vez
	- Pedido x Nota Fiscal
	- @OneToOne(mappedBy="notaFiscal")
	- Pedido - @OneToOne @JoinColumn(name="nota_fiscal_id")
- muitos para muitos (coleções)
	- tabela intermediária
	- Produto x Categoria
	- @ManyToMany
      @JoinTable(name = "produto_categoria",
            joinColumns = @JoinColumn(name = "produto_id"),
            inverseJoinColumns = @JoinColumn(name = "categoria_id")
- mapeamento bidirecional
	- "ida e volta"
	- Produto x Categoria
- owner e non-owning
	- fazer a relação ou persistir somente se owner
	- quem manda persistir a relação do JPA é o owner
	- sempre o atributo do owner seja preenchido para que a relação seja persistida
	- jointable ou joinColumns (ou contrario de mappedby) - owner
	- mappedby - non-owning